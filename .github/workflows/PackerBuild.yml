name: Workflow for Building Packers and tests 
run-name:  NPM Test job and packer build 
env: 
  DB_USERNAME: ${{secrets.DB_USERNAME}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  DB_HOST : ${{secrets.DB_HOST}}
  PORT: ${{secrets.NODE_PORT}} 
  NODE_PORT: ${{secrets.NODE_PORT}} # DECLARED FOR PACKER THE VARIABLE TO BE NODE_PORT to avoid confusion 
  # DB_NAME: ${{secrets.DB_NAME}}
  # GOOGLE_AUTH_SERVICE: ${{secrets.AUTH_CREDS}} # GOOGLE AUTH SERVICE credentials
  DB_DATABASE: ${{secrets.DB_DATABASE}}
  GOOGLE_PROJECT_ID: ${{secrets.GOOGLE_PROJECT_ID}}
  SOURCE_IMAGE_FAMILY: ${{secrets.SOURCE_IMAGE_FAMILY}}
  IMAGE_ZONE: ${{secrets.IMAGE_ZONE}}
  IMAGE_FAMILY: ${{secrets.IMAGE_FAMILY}}
  IMAGE_STORAGE_LOCATIONS: ${{secrets.IMAGE_STORAGE_LOCATIONS}}
  DISK_TYPE: ${{secrets.DISK_TYPE}}
  IMAGE_NAME: ${{secrets.IMAGE_NAME}}
on: 
  pull_request :
    types: 
      - closed
    branches: 
      - main
jobs:
  npm-test-and-packer-build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Setup SQL 
        run:  |
          sudo service mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_DATABASE }};" -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}

      - uses: actions/checkout@v4
      - name: Installing NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 21.3.0
      - name: Installing Dependancies
        run: npm ci 
      - name : Run test
        run: npm test
      
      - name: Install Packer
        uses: hashicorp/setup-packer@main
        with:
          version: 1.10.1

      - name: Setting up zip for the packer 
        run:  zip -r webapp-main.zip ./*  -x 'node_modules/*'; 

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.AUTH_CREDS }}'
  
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
  
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      
      - name: packer downloading the binaries for the required provided 
        run:  packer init packer/templates/packer.pkr.hcl 

      - name: Status check to validate packer validate 
        run:  packer validate  packer/templates/packer.pkr.hcl

      - name: Build the packer image
        run: packer build packer/templates/packer.pkr.hcl
      
      - name: create a new image template 
        run: |
          sudo apt install jq -y
          cat packer_manifest.json
          image_id=$(cat packer_manifest.json | jq -r '.builds[0].artifact_id')
          timestamp=$(date +%s)

          gcloud compute instance-templates create cli-template-$timestamp \
          --instance-template-region=us-central1 --machine-type=e2-medium  \
          --image=$image_id --network=vpc-network-dev-assignment-05 --subnet=webapp --region=us-central1  --boot-disk-type=pd-standard \
          --metadata=startup-script="#! /bin/bash
           if [ -e "/opt/webapp/.env" ]; then
                echo \"File already exists\"
            else
                echo \"DB_HOST=$DB_HOST_TF \" >> /opt/webapp/.env
                echo \"DB_USERNAME=webapp\">>/opt/webapp/.env
                echo \"DB_PASSWORD=$DB_PASSWORD_TF \">>/opt/webapp/.env
                echo \"DB_DATABASE=webapp\">>/opt/webapp/.env
                echo \"PORT=3500\">>/opt/webapp/.env
            fi" --network-tier=STANDARD --service-account=serviceaccount-2024-for-vm@cloud-computing-dev-csye6225.iam.gserviceaccount.com --scopes=logging-write,monitoring-write,pubsub,cloud-platform \
          --tags=csye6225  --region=$PROJECT_REGION  \
          --boot-disk-kms-keyring=$KEY_RING \
          --boot-disk-kms-key=$VM_INSTANCE_KEY 

          gcloud compute instance-groups managed rolling-action start-update  \
          instance-group-manager-csye6225 --version=template=https://www.googleapis.com/compute/v1/projects/cloud-computing-dev-csye6225/regions/us-central1/instanceTemplates/cli-template-$timestamp \
          --region=us-central1 --max-surge=6
        env: 
          DB_HOST_TF: ${{secrets.DB_HOST_TF}}
          DB_PASSWORD_TF: ${{secrets.DB_PASSWORD_TF}}
          KEY_RING: ${{secrets.KEY_RING}}
          VM_INSTANCE_KEY: ${{secrets.VM_INSTANCE_KEY}}
          PROJECT_REGION: ${{secrets.PROJECT_REGION}}

      
      - name: polling to check if update is verified 
        id: poll_check_status
        run: | 
          gcloud compute instance-groups managed wait-until-stable  instance-group-manager-csye6225 --region=us-central1 --timeout=600
      
      - name: check previous step result 
        if: ${{ steps.poll_check_status.outcome == 'failure' }}
        run: exit 1
    
      - name: remove packer_manifest 
        run: rm -rf packer_manifest.json

      - name: remove the zip file 
        run: rm -rf webapp-main.zip
